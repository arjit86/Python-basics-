Chapter 6 – Conditional Expressions
Sometimes we want to play pubg on our phone if the day is Sunday.

Sometimes we order Ice-cream online if the day is sunny.

Sometimes we go hiking if our parents allow.

All these are decisions that depend on the condition being met.

In python programming too, we must be able to execute instructions on a condition(s) being met. This is what conditions are for!

If else and elif in Python
If else and elif statements are a multiway decision taken by our program due to certain conditions in our code.

Syntax:

'''
if (condition1):		// if condition 1 is true
	print(“yes”)
elif (condition2):		// if condition 2 is true
	print(“No”)
else:				// otherwise
	print(“May be”)
'''
Code example:

a = 22
if (a>9):
    print(“Greater”)
else:
    print(“lesser”)
Quick Quiz: Write a program to print yes when the age entered by the user is greater than or equal to 18.


Relational Operators
Relational operators are used to evaluate conditions inside if statements. Some examples of relational operators are:

= = -> equals

>=  -> greater than/equal to

<=, etc.
Logical Operators
In python, logical operators operate on conditional statements. Example:

and -> true if both operands are true else false

or -> true if at least one operand is true else false

not -> inverts true to false and false to true
elif clause
elif in python means [else if]. If statement can be chained together with a lot of these elif statements followed by an else statement.

'''
if (condition1):
    #code
elif (condition 2):
    #code
elif (condition 2):
    #code
….
else:
    #code    '''
The above ladder will stop once a condition in an if or elif is met.
Important Notes:

There can be any number of elif statements.
Last else is executed only if all the conditions inside elifs fail.